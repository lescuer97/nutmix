services:
  traefik:
    image: "traefik:v3.0.0"
    container_name: "traefik"
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.selfhostedservices.acme.tlschallenge=true"
      - "--certificatesresolvers.selfhostedservices.acme.email=${LE_EMAIL_ADDRESS}"
      - "--certificatesresolvers.selfhostedservices.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    depends_on:
      - db
      - mint
  db:
    image: postgres:16.8
    restart: always
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3

  mint:
    env_file:
      - path: ".env"
        required: true
    environment:
      DOCKER: "true"
    build: ./
    restart: on-failure:10
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.mint.headers.browserXSSFilter=true"
      - "traefik.http.middlewares.mint.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.mint.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.mint.headers.stsPreload=true"
      - "traefik.http.middlewares.mint.headers.stsSeconds=155520011"
      - "traefik.http.middlewares.mint_redirect.redirectregex.permanent=true"
      - "traefik.http.middlewares.mint_redirect.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.mint_redirect.redirectregex.replacement=https://$${1}/remote.php/dav/"
      - "traefik.http.routers.mint.entrypoints=websecure"
      - "traefik.http.routers.mint.middlewares=mint,mint_redirect,mint-https"
      - "traefik.http.routers.mint.rule=Host(`${MINT_HOSTNAME}`)"
      - "traefik.http.routers.mint.tls.certresolver=selfhostedservices"
      - "traefik.http.services.mint.loadbalancer.server.port=8081"
      - "traefik.http.middlewares.mint.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.mint-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.mint-ratelimit1.ratelimit.average=30"
      - "traefik.http.middlewares.mint-ratelimit2.ratelimit.burst=60"
      - "traefik.http.routers.mint-http.entrypoints=web"
      - "traefik.http.routers.mint-http.rule=Host(`${MINT_HOSTNAME}`)"
      - "traefik.http.routers.mint-http.middlewares=mint-https@docker"
    volumes:
      - /var/log/nutmix:/var/log/nutmix
      - ${HOME}/.config/nutmix:/root/.config/nutmix

  # keycloak:
  #   image: quay.io/keycloak/keycloak:25.0.6
  #   command: start
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.middlewares.keycloak.headers.browserXSSFilter=true"
  #     - "traefik.http.middlewares.keycloak.headers.contentTypeNosniff=true"
  #     - "traefik.http.middlewares.keycloak.headers.stsIncludeSubdomains=true"
  #     - "traefik.http.middlewares.keycloak.headers.stsPreload=true"
  #     - "traefik.http.middlewares.keycloak.headers.stsSeconds=155520011"
  #     - "traefik.http.middlewares.keycloak_redirect.redirectregex.permanent=true"
  #     - "traefik.http.routers.keycloak.entrypoints=websecure"
  #     - "traefik.http.routers.keycloak.middlewares=keycloak,keycloak_redirect,mint-https"
  #     - "traefik.http.routers.keycloak.rule=Host(`${KEYCLOAK_HOSTNAME}`)"
  #     - "traefik.http.routers.keycloak.tls.certresolver=selfhostedservices"
  #     - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
  #     - "traefik.http.middlewares.keycloak.headers.customRequestHeaders.X-Forwarded-Proto=https"
  #     - "traefik.http.middlewares.keycloak-https.redirectscheme.scheme=https"
  #     - "traefik.http.middlewares.keycloak-ratelimit1.ratelimit.average=30"
  #     - "traefik.http.middlewares.keycloak-ratelimit2.ratelimit.burst=60"
  #     - "traefik.http.routers.keycloak-http.entrypoints=web"
  #     - "traefik.http.routers.keycloak-http.rule=Host(`${KEYCLOAK_HOSTNAME}`)"
  #     - "traefik.http.routers.keycloak-http.middlewares=keycloak-https@docker"
  #   environment:
  #     KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
  #     KC_HOSTNAME_PORT: ${KEYCLOAK_HOSTNAME_PORT}
  #     KC_HOSTNAME_STRICT_BACKCHANNEL: false
  #     KC_HTTP_ENABLED: true
  #     KC_HOSTNAME_STRICT_HTTPS: false
  #     KC_HEALTH_ENABLED: true
  #     KC_PROXY: "edge"
  #     KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
  #     KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
  #     KC_DB: postgres
  #     KC_DB_URL: jdbc:postgresql://keycloak_postgres/${KEYCLOAK_POSTGRES_DB}
  #     KC_DB_USERNAME: ${KEYCLOAK_POSTGRES_USER}
  #     KC_DB_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
  #   restart: always
  #   depends_on:
  #     - keycloak_postgres
  #
  # keycloak_postgres:
  #   image: postgres:16.8
  #   volumes:
  #     - ${HOME}/.config/nutmix/keycloak_pq_data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_DB: ${KEYCLOAK_POSTGRES_DB}
  #     POSTGRES_USER: ${KEYCLOAK_POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "pg_isready -U ${KEYCLOAK_POSTGRES_USER} -d ${KEYCLOAK_POSTGRES_DB}",
  #       ]
  #     interval: 20s
  #     timeout: 5s
  #     retries: 10

volumes:
  db:
    driver: local
  keycloak_pq_data:
    driver: local
