name: Release from Version File

on:
  push:
    branches:
      - main

permissions:
  contents: write # Required to create tags and releases

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Read version
        id: get_version
        run: |
          VERSION=$(cat VERSION)
          echo "Version is $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.5"

      - name: install templ
        run: |
          go install github.com/a-h/templ/cmd/templ@latest

      - name: run templ build
        run: |
          templ generate .

      - name: Build Linux binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o nutmix ./cmd/nutmix/main.go

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: nutmix-linux-$VERSION
          path: ./nutmix

      - name: Check if Tag Exists
        id: check_tag
        env:
          VERSION: ${{ steps.get_version.outputs.version }}
        run: |
          if git rev-parse "refs/tags/$VERSION" >/dev/null 2>&1; then
            echo "Tag $VERSION already exists. Updating release."
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag $VERSION
            git push origin $VERSION
          fi

      - name: Create or Update GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
            ./nutmix
          allowUpdates: true
